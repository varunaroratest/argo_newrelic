name: Add Secret to Azure Cluster

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
env:
  KUBECONFIG: "/home/runner/work/_temp/kubeconfig_1697437857702"
  ARGOCD_SERVER: localhost:8080/argocd
  ARGOCD_USERNAME: admin
  ARGOCD_PASSWORD: ${{ secrets.argo-new-cluster }}
  NEWRELIC_APIKEY: ${{ secrets.NEWRELIC_APIKEY }}
  
permissions:
  id-token: write
  contents: read

jobs:
  add_secret:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        run: |
          az login --service-principal \
            --username ${{ secrets.CLIENT_ID }} \
            --password ${{ secrets.AZURE_CREDENTIALS }} \
            --tenant ${{ secrets.TENANT_ID }}
          az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}
          
      - uses: azure/aks-set-context@v3        
        with:
          resource-group: argoResource
          cluster-name: clusterkubernetes
          admin: "true"
          use-kubelogin: "true"   
          
      - uses: azure/setup-kubectl@v1
        id: install
      
      # - name: Install Argo CD CLI
      #   run: |
      #     curl -LO https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      #     mv argocd-linux-amd64 /usr/local/bin/argocd
      #     chmod +x /usr/local/bin/argocd
          
      - name: Add secret to cluster
        env:
          NR_KEY: ${{ secrets.NEWRELIC_APIKEY }}
        run: |
          cd k8/
          NRKEY=$(echo -n "${NR_KEY}" | base64 -w 0)
          sed -e "s/{{NRKEY}}/$NRKEY/g" temp-secret.yaml > t-secret.yaml             
          kubectl apply -f t-secret.yaml
          sed -e "s/{{NRKEY}}/$NRKEY/g" cm.yaml > t-cm.yaml              
          kubectl apply -f t-cm.yaml
          sed -e "s/{{NRKEY}}/$NRKEY/g" appset.yaml > t-appset.yaml              
          kubectl apply -f t-appset.yaml  

          
          # kubectl create secret generic my-secret --from-literal=my-secret="$NR_KEY" -n argocd
          # envsubst < secret.yaml | kubectl apply -f secret.yaml 
          # kubectl apply -f secret-substituted.yaml
          # envsubst < cm.yaml | kubectl apply -f cm.yaml 
          # kubectl apply -f appset.yaml
          # az aks secret add --name clusterkubernetes --resource-group argoResource --secret-name my-new-secret --namespace argocd --keyvaulut-name newrelic --keyvault-secret-name my-new-secret --value "$NR_KEY"
          
          # argocd login $ARGOCD_SERVER --username admin --password $ARGOCD_PASSWORD --insecure
          # echo "login to argocd"
          # kubectl apply -f cm.yaml -n argocd
          # kubectl apply -f secret.yaml -n argocd
         
          # argocd app create argo-application --repo https://github.com/masterysystems/devops-poc-test-workflow.git --path . --dest-server https://kubernetes.default.svc --dest-namespace default
          # argocd login localhost:8080 --insecure --username admin --password FMO8-KjVF4jdbN-B
          # argocd app sync argo-application
