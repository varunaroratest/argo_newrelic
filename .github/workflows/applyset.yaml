name: Add Secret to Azure Cluster

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  KUBECONFIG: "/home/runner/work/_temp/kubeconfig_1697437857702"
  ARGOCD_SERVER: localhost:8080/argocd
  ARGOCD_USERNAME: admin
  ARGOCD_PASSWORD: ${{ secrets.argo-new-cluster }}
  
permissions:
  id-token: write
  contents: read

jobs:
  add_secret:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        run: |
          az login --service-principal \
            --username ${{ secrets.CLIENT_ID }} \
            --password ${{ secrets.AZURE_CREDENTIALS }} \
            --tenant ${{ secrets.TENANT_ID }}
          az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}
          
      - uses: azure/aks-set-context@v3        
        with:
          resource-group: argoResource
          cluster-name: clusterkubernetes
          admin: "true"
          use-kubelogin: "true"
          
      # - name: Install kubectl
      #   uses: azure/kubectl@v1
      #   with:
      #     install-yaml: true

      # - name: Get secret value
      #   id: get_secret
      #   run: |
      #     secretValue=$(az keyvault secret show --name newrelic-api-key --vault-name newrelic-api-Key --query value --output tsv)
      #     echo "Secret Value: $secretValue"
      - name: Install Argo CD CLI
        run: |
          curl -LO https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          mv argocd-linux-amd64 /usr/local/bin/argocd
          chmod +x /usr/local/bin/argocd
          
      - name: Add secret to cluster
        run: |
          cd k8/
          # argocd login $ARGOCD_SERVER --username admin --password $ARGOCD_PASSWORD --insecure
          # echo "login to argocd"
          kubectl apply -f cm.yaml -n argocd
          kubectl apply -f secret.yaml -n argocd
          argocd app create argo-application --repo https://github.com/masterysystems/devops-poc-test-workflow.git --path . --dest-server https://kubernetes.default.svc --dest-namespace default
          argocd login localhost:8080 --insecure --username admin --password FMO8-KjVF4jdbN-B
          argocd app sync argo-application
